/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M26
 * Generated at: 2017-11-15 10:10:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Date;
import java.net.URLEncoder;

public final class Login_005fSuccess_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.net.URLEncoder");
    _jspx_imports_classes.add("java.util.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=GBK");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <form action=\"\" method=\"post\">\r\n");
      out.write("        <input type=\"text\" name=\"userName\"/>\r\n");
      out.write("        <input type=\"submit\" value=\"提交\"/>\r\n");
      out.write("    </form>\r\n");
      out.write("    ");

        String getMethod=request.getMethod();
        String getRequestURI= request.getRequestURI();
        String getProtocol=request.getProtocol();
        String getServerName=request.getServerName();
        int getServerPort=request.getServerPort();
        String getRemoteAddr=request.getRemoteAddr();
        String getRemoteHost=request.getRemoteHost();
        String getParameter_user = request.getAttribute("username").toString();
        String getParameter_pwd=request.getAttribute("password").toString();
        String getParameter_sex=request.getAttribute("sex").toString();
        Cookie cookie =new Cookie("myCookie", URLEncoder.encode(getParameter_user,"UTF-8")+"#"+URLEncoder.encode(new Date().toString(),"UTF-8"));
        cookie.setMaxAge(60*60*24*30);
        response.addCookie(cookie);
    
      out.write("<br/>\r\n");
      out.write("    请求方法名：");
      out.print( getMethod);
      out.write("<br/>\r\n");
      out.write("    请求的资源：");
      out.print( getRequestURI);
      out.write("<br/>\r\n");
      out.write("    请求使用的协议：");
      out.print( getProtocol);
      out.write("<br/>\r\n");
      out.write("    请求的服务器IP：");
      out.print( getServerName);
      out.write("<br/>\r\n");
      out.write("    请求的服务器端口：");
      out.print( getServerPort);
      out.write("<br/>\r\n");
      out.write("    客户端的IP地址：");
      out.print( getRemoteAddr);
      out.write("<br/>\r\n");
      out.write("    客户端的主机名：");
      out.print( getRemoteHost);
      out.write("<br/>\r\n");
      out.write("    表单提交来的用户名:");
      out.print( getParameter_user);
      out.write("<br/>\r\n");
      out.write("    表单提交来的密码:");
      out.print( getParameter_pwd);
      out.write("<br/>\r\n");
      out.write("    表单提交来的性别:");
      out.print( getParameter_sex);
      out.write("<br/>\r\n");
      out.write("    ");
 String message=request.getParameter("status");
      out.write("\r\n");
      out.write("    表单的提交的名字：");
      out.print( message);
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        window.location.href=\"/Blog_jsp/jsp/Index.jsp\";\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
